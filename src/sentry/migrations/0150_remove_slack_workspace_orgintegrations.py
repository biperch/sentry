# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-01-20 19:29
from __future__ import unicode_literals

from django.db import migrations
from django.db.models import Q


def remove_slack_workspace_apps(apps, schema_editor):
    """
    Remove OrganizationIntegrations that are linked to Slack Integrations that are
    still using workspace apps.

    We can determine which integrations are workspace apps by looking at the metadata.
    There is a field for new or migrated slack integrations called the `installation_type`.
    If a slack integration is still a workspace app, it will not have this field
    in the metadata.
    """

    Integration = apps.get_model("sentry", "Integration")
    OrganizationIntegration = apps.get_model("sentry", "OrganizationIntegration")

    integrations = (
        Integration.objects.all()
        .filter(provider="slack")
        .exclude(metadata__icontains="installation_type")
        .values_list("id", flat=True)
    )

    for org_integration in OrganizationIntegration.objects.filter(integration_id__in=integrations):
        org_integration.delete()


class Migration(migrations.Migration):
    # This flag is used to mark that a migration shouldn't be automatically run in
    # production. We set this to True for operations that we think are risky and want
    # someone from ops to run manually and monitor.
    # General advice is that if in doubt, mark your migration as `is_dangerous`.
    # Some things you should always mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that
    #   they can be monitored. Since data migrations will now hold a transaction open
    #   this is even more important.
    # - Adding columns to highly active tables, even ones that are NULL.
    is_dangerous = False

    # This flag is used to decide whether to run this migration in a transaction or not.
    # By default we prefer to run in a transaction, but for migrations where you want
    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
    # want to create an index concurrently when adding one to an existing table.
    atomic = True

    dependencies = [
        ("sentry", "0149_bigint"),
    ]

    operations = [
        migrations.RunPython(
            code=remove_slack_workspace_apps, reverse_code=migrations.RunPython.noop
        )
    ]
